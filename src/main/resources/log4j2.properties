# Define the root logger with appender file=

###	ON SERVER
property.basePath = /app/FRES/logs
property.containerName = ${env:containerName}

###	ON LOCAL
#property.basePath = C:/Dev/Projects/logs

monitorInterval=15
appenders = rolling,infoX

# log4j2
# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLoggerAppender
appender.rolling.fileName= ${basePath}/Spring_${containerName}_.log
appender.rolling.filePattern= ${basePath}/Spring_${containerName}_%d{yyyy-MM-dd}.%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
appender.rolling.policies.type = Policies

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

## INFO
# RollingFileAppender name, pattern, path and rollover policy
appender.infoX.type = RollingFile
appender.infoX.name = infoAppender
appender.infoX.fileName= ${basePath}/APP_${containerName}_.log
appender.infoX.filePattern= ${basePath}/APP_${containerName}_%d{yyyy-MM-dd}.%i.log.gz
appender.infoX.layout.type = PatternLayout
appender.infoX.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] [%C{1}] -> %m%n
appender.infoX.policies.type = Policies

# RollingFileAppender rotation policy
appender.infoX.policies.size.type = SizeBasedTriggeringPolicy
appender.infoX.policies.size.size = 10MB
appender.infoX.policies.time.type = TimeBasedTriggeringPolicy
appender.infoX.policies.time.interval = 1
appender.infoX.policies.time.modulate = true
appender.infoX.strategy.type = DefaultRolloverStrategy
appender.infoX.strategy.delete.type = Delete
appender.infoX.strategy.delete.basePath = ${basePath}
appender.infoX.strategy.delete.maxDepth = 10
appender.infoX.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.infoX.strategy.delete.ifLastModified.age = 30d

# Configure root logger : file,info,debug
#rootLogger.level = error, file, info
#rootLogger.appenderRef.rolling.ref = fileLogger

#logging.level.root=WARN
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR

#loggers .. call for multiply logger
loggers
# name = name declaring in LogManager
# appenderRefs = level of logging ... we default Logging overridden by INFO level
# appenderRefs.level = same as above ??
# additivity = if want to seperate data use this, maybe donno?
# logger.level = consider which to show log.info(), log.warn(), etc.
# logger.appenderRef.[appends name].ref = which appender style do you considered use ^^^
logger.name = info-logging
logger.appenderRefs = info
logger.appenderRefs.level = info
logger.additivity=false
logger.level= info,warn,error
logger.appenderRef.infoX.ref = infoAppender

#logging.level.infoX = info
#logging.appenderRefs.infoX = info
#logging.appenderRefs.infoX.level = info
#logging.additivity = false
#logging.level = info
#logging.appenderRef.infoX.ref = infoAppender

rootLogger.level = debug
#rootLogger.additivity = false
rootLogger.appenderRefs =  fileLogger
rootLogger.appenderRef.rolling.ref = fileLoggerAppender

